sudo: required
dist: xenial
osx_image: xcode9.4
os:
- osx
- linux
language: cpp
cache:
- ccache
- directories:
    - $HOME/Library/Caches/Homebrew
env:
  global:
    CCACHE_MAXSIZE: 1G
  matrix:
  - target_v=osx
  - target_v=osx_test
  - target_v=linux_wallet_test
  - target_v=linux_wallet
  - target_v=linux_daemon
  - target_v=windows_x86
  - target_v=windows_x86_64
  - target_v=rpi_daemon
  - target_v=rpi_wallet_test
  - target_v=rpi_wallet
  
matrix:
  exclude:
  - os: osx
    env: target_v=windows_x86
  - os: osx
    env: target_v=windows_x86_64
  - os: osx
    env: target_v=linux_daemon
  - os: osx
    env: target_v=linux_wallet
  - os: osx
    env: target_v=linux_wallet_test
  - os: osx
    env: target_v=rpi_daemon
  - os: osx
    env: target_v=rpi_wallet
  - os: osx
    env: target_v=rpi_wallet_test
  - os: linux
    env: target_v=osx
  - os: linux
    env: target_v=osx_test
before_install:
install:
before_script:
script:
- if [[ "$target_v" == "osx"               ]]; then python ci_scripts/test_osx-gui_wallet.py        ; fi
- if [[ "$target_v" == "osx_test"          ]]; then python ci_scripts/test_osx-gui_wallet.py -t     ; fi
- if [[ "$target_v" == "linux_wallet_test" ]]; then python ci_scripts/test_linux-gui_wallet.py -t   ; fi
- if [[ "$target_v" == "linux_wallet"      ]]; then python ci_scripts/test_linux-gui_wallet.py      ; fi
- if [[ "$target_v" == "linux_daemon"      ]]; then python ci_scripts/test_linux-daemon.py          ; fi
- if [[ "$target_v" == "windows_x86"       ]]; then python ci_scripts/test_win_x86-gui_wallet.py    ; fi
- if [[ "$target_v" == "windows_x86_64"    ]]; then python ci_scripts/test_win_x86_64-gui_wallet.py ; fi
- if [[ "$target_v" == "rpi_wallet"        ]]; then python ci_scripts/test_rpi-daemon-gui.py        ; fi
- if [[ "$target_v" == "rpi_wallet_test"   ]]; then python ci_scripts/test_rpi-daemon-gui.py -t     ; fi
- if [[ "$target_v" == "rpi_daemon"        ]]; then python ci_scripts/test_rpi-daemon-gui.py        ; fi

after_script:
- echo "Done"
before_deploy:
- cd $TRAVIS_BUILD_DIR
deploy:
deploy:
  provider: releases
  api_key: $GITHUB_OAUTH_TOKEN
  file: "neblio_custom"
  skip_cleanup: true
  draft: true
  overwrite: true
  on:
    repo: david4neblio/neblio
